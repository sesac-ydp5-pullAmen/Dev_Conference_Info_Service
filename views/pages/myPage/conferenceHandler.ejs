<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../../common/head.ejs', {title: '행사 관리 페이지' }) %>
        <link
            rel="stylesheet"
            href="/static/css/pages/myPage/managerAside.css"
        />
        <link rel="stylesheet" href="/static/css/pages/myPage/conHandler.css" />
    </head>
    <body>
        <%- include('../../common/header.ejs') %>
        <main>
            <%- include('./managerAside') %>
            <h1>행사 관리 페이지</h1>

            <div>
                <div class="container">
                    <div class="row">
                        <div class="col-lg-10">
                            <div class="card">
                                <div class="card-body">
                                    <h2 class="card-title">
                                        행사 등록 대기 목록
                                    </h2>
                                    <div>
                                        <ul id="conferenceList"></ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row conIsAgreed">
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-body">
                                    <h2 class="card-title">행사 등록 완료</h2>
                                    <section>
                                        <ul id="successConferenceList"></ul>
                                        <!-- <button
                                            type="button"
                                            class="btn btn-outline-secondary"
                                            onclick="getSuccessRegister()"
                                        >
                                            행사 등록 완료
                                        </button> -->
                                    </section>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-body">
                                    <h2 class="card-title">
                                        행사 등록 거절 리스트
                                    </h2>
                                    <section>
                                        <ul id="rejectedConferenceList"></ul>
                                        <!-- <button
                                            type="button"
                                            class="btn btn-outline-secondary"
                                            onclick="getrejectedConference()"
                                        >
                                            거절한 행사 리스트
                                        </button> -->
                                    </section>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- <div>
                    <section id="successConferenceList">
                        <button type="button" onclick="getSuccessRegister()">
                            행사 등록 완료
                        </button>
                    </section>
                    <section id="rejectedConferenceList">
                        <button type="button" onclick="getrejectedConference()">
                            거절한 행사 리스트
                        </button>
                    </section>
                </div> -->
            </div>
        </main>
        <%- include('../../common/footer.ejs') %>
    </body>
    <script>
        // 등록 신청한 행사 보기
        function getConferenceRegister() {
            axios({
                method: 'GET',
                url: '/manager/getConferenceRegister',
            }).then((res) => {
                if (res.status === 200) {
                    const conferenceList = res.data.conferences;
                    console.log('conferenceList >>>>', conferenceList);
                    if (
                        Array.isArray(conferenceList) &&
                        conferenceList.length > 0
                    ) {
                        const conferenceListContainer =
                            document.getElementById('conferenceList');
                        conferenceListContainer.innerHTML = ''; // Clear previous content

                        conferenceList.forEach((conference) => {
                            const conferenceElement =
                                document.createElement('div');
                            // 행사를 직접적으로 보이게 하는 부분
                            conferenceElement.innerHTML = `
                                                <li id="conference${conference.con_id}">
                                                    <p>            <span>
                                                    행사 이름: ${conference.con_title}
                                                    </span>
                                                 
                                                    <button class="btn btn-outline-secondary" onclick="approveConference(${conference.con_id})">등록 승인</button>
                                                    <button class="btn btn-outline-secondary" onclick="rejectConference(${conference.con_id})">승인 거절</button></p>
                                        
                                                </li>
                                             
                                                
                                            `;
                            // conference.{DB변수명}으로 접근할 수 있습니다. 등록 신청한 행사가 예쁘게 보여졌으면 좋을 것같아요!
                            conferenceListContainer.appendChild(
                                conferenceElement
                            );
                        });
                    } else {
                        const conferenceListContainer =
                            document.getElementById('conferenceList');
                        conferenceListContainer.innerHTML =
                            '신청한 새로운 행사가 없습니다.';
                    }
                }
            });
        }

        // 컨퍼런스 승인하기approveConference
        function approveConference(conferenceId) {
            // 행사 요소를 찾아옴
            // const conferenceElement = document.querySelector(
            //     `#conference${conferenceId.con_id}`
            // );

            // if (!conferenceElement) {
            //     console.error(`행사 ID ${conferenceId}를 찾을 수 없습니다.`);
            //     return;
            // }

            // 행사 요소를 행사 등록 대기 목록에서 제거
            // const conferenceListContainer =
            //     document.getElementById('conferenceList');
            // conferenceListContainer.removeChild(conferenceElement);

            // 등록 승인 버튼과 승인 거절 버튼 삭제
            // const approveButton = conferenceElement.querySelector(
            //     `button[onclick="approveConference(${conferenceId})"]`
            // );
            // const rejectButton = conferenceElement.querySelector(
            //     `button[onclick="rejectConference(${conferenceId})"]`
            // );

            // approveButton.remove();
            // rejectButton.remove();

            // 행사 요소를 행사 등록 완료 섹션에 추가
            // const successConferenceListContainer = document.getElementById(
            //     'successConferenceList'
            // );

            // if (successConferenceListContainer) {
            //     successConferenceListContainer.appendChild(conferenceElement);
            // } else {
            //     console.error('행사 등록 완료 목록을 찾을 수 없습니다.');
            // }

            axios({
                method: 'POST',
                url: '/manager/approveConference',
                data: {
                    conferenceId: conferenceId,
                },
            }).then((res) => {
                if (res.status === 200) {
                    console.log(res);
                    alert('승인 완료되었습니다!');
                    window.location.reload();
                } else {
                    alert('error');
                }
            });
        }

        // 컨퍼런스 거절하기
        function rejectConference(conferenceId) {
            axios({
                method: 'POST',
                url: '/manager/rejectConference',
                data: {
                    conferenceId: conferenceId,
                },
            }).then((res) => {
                if (res.status === 200) {
                    console.log(res);
                    alert('행사 승인을 거절합니다.');
                    window.location.reload();
                } else {
                    alert('error');
                }
            });
        }
        // 승인한 컨퍼런스 보기
        function getSuccessRegister() {
            axios({
                method: 'GET',
                url: '/manager/getSuccessRegister',
            }).then((res) => {
                if (res.status === 200) {
                    const successConferenceList = res.data.conferences;
                    console.log(
                        'successConferenceList>>>>>',
                        successConferenceList
                    );
                    if (
                        Array.isArray(successConferenceList) &&
                        successConferenceList.length > 0
                    ) {
                        const successConferenceListContainer =
                            document.getElementById('successConferenceList');
                        successConferenceListContainer.innerHTML = ''; // Clear previous content

                        successConferenceList.forEach((conference) => {
                            const successElement =
                                document.createElement('div');
                            // 행사를 직접적으로 보이게 하는 부분
                            successElement.innerHTML = `
                                                <p>행사 이름: ${conference.con_title}</p>
                                            `;
                            // conference.{DB변수명}으로 접근할 수 있습니다. 등록 신청한 행사가 예쁘게 보여졌으면 좋을 것같아요!
                            successConferenceListContainer.appendChild(
                                successElement
                            );
                        });
                    } else {
                        const successConferenceListContainer =
                            document.getElementById('successConferenceList');
                        successConferenceListContainer.innerHTML =
                            '승인한 행사가 없습니다.';
                    }
                }
            });
        }

        // 거절한 컨퍼런스 보기
        function getrejectedConference() {
            axios({
                method: 'GET',
                url: '/manager/rejectedConferenceList',
            }).then((res) => {
                if (res.status === 200) {
                    const rejectedConferenceList = res.data.conferences;
                    if (
                        Array.isArray(rejectedConferenceList) &&
                        rejectedConferenceList.length > 0
                    ) {
                        const rejectedConferenceListContainer =
                            document.getElementById('rejectedConferenceList');
                        rejectedConferenceListContainer.innerHTML = ''; // Clear previous content

                        rejectedConferenceList.forEach((conference) => {
                            const rejectedElement =
                                document.createElement('div');
                            // 행사를 직접적으로 보이게 하는 부분
                            rejectedElement.innerHTML = `
                                                <p>행사 이름: ${conference.con_title}</p>
                                            `;
                            // conference.{DB변수명}으로 접근할 수 있습니다. 등록 신청한 행사가 예쁘게 보여졌으면 좋을 것같아요!
                            rejectedConferenceListContainer.appendChild(
                                rejectedElement
                            );
                        });
                    } else {
                        const rejectedConferenceListContainer =
                            document.getElementById('rejectedConferenceList');
                        rejectedConferenceListContainer.innerHTML =
                            '거절한 행사가 없습니다.';
                    }
                }
            });
        }

        window.onload = function () {
            getConferenceRegister(); // 페이지 로딩 시 행사 등록 대기 목록을 표시

            getSuccessRegister(); // 페이지 로딩 시 행사 등록 대기 목록을 표시

            getrejectedConference(); // 페이지 로딩 시 행사 등록 대기 목록을 표시
        };
    </script>
</html>

<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../../common/head.ejs', {title: '행사 관리 페이지' }) %>
        <link
            rel="stylesheet"
            href="/static/css/pages/myPage/managerAside.css"
        />
        <link rel="stylesheet" href="/static/css/pages/myPage/conHandler.css" />
        <link rel="stylesheet" href="/static/css/pages/myPage/myRevList.css" />

        <style>
            h2 {
                font-size: 2rem;
                font-weight: 300;
            }

            img {
                width: 100px;
                height: 100px;
                border-radius: 5%;
            }
        </style>
    </head>
    <body>
        <%- include('../../common/header.ejs') %>
        <main>
            <%- include('./managerAside') %>
            <button
                type="button"
                class="btn btn-primary"
                data-bs-toggle="modal"
                data-bs-target="#exampleModal"
            >
                Launch demo modal
            </button>
            <div
                class="modal fade"
                id="exampleModal"
                tabindex="-1"
                aria-labelledby="exampleModalLabel"
                aria-hidden="true"
            >
                <div class="modal-dialog modal-dialog-scrollable">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1
                                class="modal-title fs-5"
                                id="exampleModalLabel"
                            ></h1>
                            <button
                                type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"
                            ></button>
                        </div>
                        <div class="modal-body"></div>
                    </div>
                </div>
            </div>
            <div class="cardCenter content">
                <div class="container">
                    <div class="row">
                        <div class="marginRemove">
                            <div class="card">
                                <div class="card-body text-center">
                                    <div class="card-title">
                                        <h2>행사 등록 대기 목록</h2>
                                    </div>

                                    <table class="table">
                                        <thead>
                                            <tr class="border-bottom">
                                                <th></th>
                                                <th class="un-mobile">
                                                    행사 사진
                                                </th>

                                                <th>행사 제목</th>

                                                <th class="un-mobile">
                                                    신청 시간
                                                </th>
                                                <th></th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody id="conferenceList"></tbody>
                                    </table>
                                </div>
                                <div class="card-body text-center">
                                    <div
                                        class="accordion my-5"
                                        id="accordionPanelsStayOpenExample"
                                    >
                                        <div class="accordion-item">
                                            <h2 class="accordion-header">
                                                <button
                                                    class="accordion-button"
                                                    type="button"
                                                    data-bs-toggle="collapse"
                                                    data-bs-target="#panelsStayOpen-collapseOne"
                                                    aria-expanded="true"
                                                    aria-controls="panelsStayOpen-collapseOne"
                                                >
                                                    행사 등록 완료 목록
                                                </button>
                                            </h2>
                                            <div
                                                id="panelsStayOpen-collapseOne"
                                                class="accordion-collapse collapse show"
                                            >
                                                <div class="accordion-body">
                                                    <ul
                                                        id="successConferenceList"
                                                    ></ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="accordion-item">
                                            <h2 class="accordion-header">
                                                <button
                                                    class="accordion-button collapsed"
                                                    type="button"
                                                    data-bs-toggle="collapse"
                                                    data-bs-target="#panelsStayOpen-collapseTwo"
                                                    aria-expanded="false"
                                                    aria-controls="panelsStayOpen-collapseTwo"
                                                >
                                                    행사 등록 거절 목록
                                                </button>
                                            </h2>
                                            <div
                                                id="panelsStayOpen-collapseTwo"
                                                class="accordion-collapse collapse"
                                            >
                                                <div class="accordion-body">
                                                    <ul
                                                        id="rejectedConferenceList"
                                                    ></ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
        <%- include('../../common/footer.ejs') %>
    </body>
    <script>
        // 등록 신청한 행사 보기
        window.onload = function () {
            getConferenceRegister();
        };

        const myModal = document.getElementById('myModal');
        const myInput = document.getElementById('myInput');
        // let modalBtn;

        // if (modalBtn) {
        //     modalBtn.addEventListener('click', () => {
        //         console.log('asdf');
        //     });
        // }

        function getConferenceRegister() {
            axios({
                method: 'GET',
                url: '/manager/getConferenceRegister',
            }).then((res) => {
                if (res.status === 200) {
                    const conferenceList = res.data.conferences;
                    if (
                        Array.isArray(conferenceList) &&
                        conferenceList.length > 0
                    ) {
                        const conferenceListContainer =
                            document.getElementById('conferenceList');
                        conferenceListContainer.innerHTML = '';

                        conferenceList.forEach((conference) => {
                            const conferenceElement =
                                document.createElement('tr');

                            conferenceElement.innerHTML = `
                                                    <td></td>
                                                    <td class="un-mobile"><img src="${conference.con_image}"></td>

                                                    <td class="title-btn" data-bs-toggle="modal" data-bs-target="#exampleModal" data-id=${conference.con_id}>${conference.con_title}</td>
                                                    <td class="un-mobile">${conference.createdAt}</td>
                                                    <td><button class="btn btn-outline-primary" onclick="approveConference(${conference.con_id})">승인</button></td>
                                                    <td><button class="btn btn-outline-secondary" onclick="rejectConference(${conference.con_id})">거절</button></td>


                                                `;

                            conferenceListContainer.appendChild(
                                conferenceElement
                            );
                        });

                        // const modalBtn = document.querySelectorAll('.title-btn');
                        $('.title-btn').click(function () {
                            const index = Number($(this).attr('data-id'));
                            const modalTitle =
                                document.querySelector('.modal-title');
                            const modalBody =
                                document.querySelector('.modal-body');

                            modalTitle.textContent = $(this).text();

                            const body = conferenceList.find(
                                (con) => index === con.con_id
                            );

                            modalBody.innerHTML = body.con_detail;
                        });
                        // modalBtn.addEventListener('click', () => {
                        //     console.log(modalBtn);
                        // });
                        // modalBtn.addEventListener('click', () => {
                        //     console.log('asdf');
                        // });
                    } else {
                        const conferenceListContainer =
                            document.getElementById('conferenceList');
                        const conferenceElement = document.createElement('tr');
                        conferenceListContainer.innerHTML =
                            '<td colspan="7">신청한 새로운 행사가 없습니다.</td>';

                        conferenceListContainer.appendChild(conferenceElement);
                    }
                }
            });
        }

        // 컨퍼런스 승인하기approveConference
        function approveConference(conferenceId) {
            axios({
                method: 'POST',
                url: '/manager/approveConference',
                data: {
                    conferenceId: conferenceId,
                },
            }).then((res) => {
                if (res.status === 200) {
                    alert('승인 완료되었습니다!');
                    window.location.reload();
                } else {
                    alert('error');
                }
            });
        }

        // 컨퍼런스 거절하기
        function rejectConference(conferenceId) {
            axios({
                method: 'POST',
                url: '/manager/rejectConference',
                data: {
                    conferenceId: conferenceId,
                },
            }).then((res) => {
                if (res.status === 200) {
                    alert('행사 승인을 거절합니다.');
                    window.location.reload();
                } else {
                    alert('error');
                }
            });
        }
        // 승인한 컨퍼런스 보기
        function getSuccessRegister() {
            axios({
                method: 'GET',
                url: '/manager/getSuccessRegister',
            }).then((res) => {
                if (res.status === 200) {
                    const successConferenceList = res.data.conferences;

                    if (
                        Array.isArray(successConferenceList) &&
                        successConferenceList.length > 0
                    ) {
                        const successConferenceListContainer =
                            document.getElementById('successConferenceList');
                        successConferenceListContainer.innerHTML = '';

                        successConferenceList.forEach((conference) => {
                            const successElement = document.createElement('li');

                            successElement.innerHTML = `
                                                  <a href="/event/${conference.con_id}"><span>${conference.con_title}</span></a>
                                                `;

                            successConferenceListContainer.appendChild(
                                successElement
                            );
                        });
                    } else {
                        const successConferenceListContainer =
                            document.getElementById('successConferenceList');
                        successConferenceListContainer.innerHTML =
                            '승인한 행사가 없습니다.';
                    }
                }
            });
        }

        // 거절한 컨퍼런스 보기
        function getrejectedConference() {
            axios({
                method: 'GET',
                url: '/manager/rejectedConferenceList',
            }).then((res) => {
                if (res.status === 200) {
                    const rejectedConferenceList = res.data.conferences;
                    if (
                        Array.isArray(rejectedConferenceList) &&
                        rejectedConferenceList.length > 0
                    ) {
                        const rejectedConferenceListContainer =
                            document.getElementById('rejectedConferenceList');
                        rejectedConferenceListContainer.innerHTML = '';

                        rejectedConferenceList.forEach((conference) => {
                            const rejectedElement =
                                document.createElement('li');

                            rejectedElement.innerHTML = `
                                                    <span> ${conference.con_title}</span>
                                                `;

                            rejectedConferenceListContainer.appendChild(
                                rejectedElement
                            );
                        });
                    } else {
                        const rejectedConferenceListContainer =
                            document.getElementById('rejectedConferenceList');
                        rejectedConferenceListContainer.innerHTML =
                            '거절한 행사가 없습니다.';
                    }
                }
            });
        }

        window.onload = function () {
            getConferenceRegister();

            getSuccessRegister();

            getrejectedConference();
        };
    </script>
</html>

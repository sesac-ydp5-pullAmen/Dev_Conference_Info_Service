<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../../common/head.ejs', {title: '관리자페이지' }) %>
        <link rel="stylesheet" href="/static/css/pages/myPage/manager.css" />
        <link
            rel="stylesheet"
            href="/static/css/pages/myPage/managerAside.css"
        />
    </head>
    <body>
        <%- include('../../common/header.ejs') %>

        <main>
             <!-- 좌측 메뉴 바 -->
             <%- include('./managerAside') %>


            <div class="container">
                <h4 class="my-4"></h4>
                <div class="row">
                    <div class="col-sm-12 mb-3 mb-sm-0">
                        <div class="card">
                            <h5 class="card-title">승인대기 행사 목록</h5>

                            <div id="conferenceList">
                                <a
                                    href="#"
                                    class="btn btn-primary"
                                    onclick="getConferenceRegister()"
                                    >행사 불러오기
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6 mb-3 mb-sm-0">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">승인 완료 행사 목록</h5>
                                <p class="card-text">
                                    With supporting text below as a natural
                                    lead-in to additional content.
                                </p>
                                <button
                                    type="button"
                                    onclick="getConferenceRegister()"
                                >
                                    행사 등록 신청 승인 페이지
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">거절 행사 목록</h5>
                                <p class="card-text">
                                    With supporting text below as a natural
                                    lead-in to additional content.
                                </p>
                                <a
                                    href="#"
                                    class="btn btn-primary"
                                    onclick="getrejectedConference()"
                                    >거절 행사 리스트</a
                                >
                            </div>
                        </div>
                    </div>
                </div>
                
        <button type="button" onclick="getUser()">전체 유저 보기</button>
        <!-- 전체 유저 불러오는 allUser.ejs로 이동 -->


        <button type="button" onclick="getAllConference()">
            전체 행사 리스트
        </button>
        <div id="allConference">
            <!-- 거절한 행사 리스트를 여기에 동적으로 추가 -->
        </div>

        <button type="button" onclick="getConferenceRegister()">
            행사 등록 신청 승인 페이지
        </button>
        <div id="conferenceList">
            <!-- 행사 리스트를 여기에 동적으로 추가 -->
        </div>

        <button type="button" onclick="getrejectedConference()">
            거절한 행사 리스트
        </button>
        <div id="rejectedConferenceList">
            <!-- 거절한 행사 리스트를 여기에 동적으로 추가 -->
        </div>
        <button type="button"></button>
        </main>
          <button type="button" onclick="getAllConference()">전체 행사 리스트</button>
        <button type="button" onclick="getConferenceHandler()">행사 관리 페이지</button>
        <%- include('../../common/footer.ejs') %>


      
    </body>
    <script>
        // 전체 유저 보기
        function getUser() {
            axios({
                method: 'GET',
                url: '/manager/allUser',
            }).then((res) => {
                if (res.status === 200) {
                    window.location.href = '/manager/allUser';
                }
            });
        }
        // 전체 행사 보기
        function getAllConference() {
            axios({
                method: 'GET',
                url: '/manager/allConference',
            }).then((res) => {
                if (res.status === 200) {
                    window.location.href = '/manager/allConference';
                }
            });
        }
        // 등록 신청한 행사 보기

        function getConferenceRegister() {
            axios({
                method: 'GET',
                url: '/manager/getConferenceRegister',
            }).then((res) => {
                if (res.status === 200) {
                    const conferenceList = res.data.conferences;
                    console.log('conferenceList >>>>', conferenceList);
                    if (
                        Array.isArray(conferenceList) &&
                        conferenceList.length > 0
                    ) {
                        const conferenceListContainer =
                            document.getElementById('conferenceList');
                        conferenceListContainer.innerHTML = ''; // Clear previous content

                        conferenceList.forEach((conference) => {
                            const conferenceElement =
                                document.createElement('div');
                            // 행사를 직접적으로 보이게 하는 부분
                            conferenceElement.innerHTML = `
                                <p>행사 이름: ${conference.con_title}</p>
                                <p>행사 시작날짜: ${conference.con_start_date}</p>
                                <button onclick="approveConference(${conference.con_id})">등록 승인</button>
                                <button onclick="rejectConference(${conference.con_id})">승인 거절</button>
                            `;
                            // conference.{DB변수명}으로 접근할 수 있습니다. 등록 신청한 행사가 예쁘게 보여졌으면 좋을 것같아요!
                            conferenceListContainer.appendChild(
                                conferenceElement
                            );
                        });
                    } else {
                        const conferenceListContainer =
                            document.getElementById('conferenceList');
                        conferenceListContainer.innerHTML =
                            '신청한 새로운 행사가 없습니다.';
                    }
                }
            });
        }

        // 컨퍼런스 승인하기
        function approveConference(conferenceId) {
            axios({
                method: 'POST',
                url: '/manager/approveConference',
                data: {
                    conferenceId: conferenceId,
                },
            }).then((res) => {
                if (res.status === 200) {
                    console.log(res);
                    alert('승인 완료되었습니다!');
                } else {
                    alert('error');
                }
            });
        }
        // 컨퍼런스 거절하기

        function rejectConference(conferenceId) {
            axios({
                method: 'POST',
                url: '/manager/rejectConference',
                data: {
                    conferenceId: conferenceId,
                },
            }).then((res) => {
                if (res.status === 200) {
                    console.log(res);
                    alert('행사 승인을 거절합니다.');
                } else {
                    alert('error');
                }
            });
        }
        // 거절한 컨퍼런스 보기
        function getrejectedConference() {
            axios({
                method: 'GET',
                url: '/manager/rejectedConferenceList',
            }).then((res) => {
                if (res.status === 200) {
                    const rejectedConferenceList = res.data.conferences;
                    if (
                        Array.isArray(rejectedConferenceList) &&
                        rejectedConferenceList.length > 0
                    ) {
                        const rejectedConferenceListContainer =
                            document.getElementById('rejectedConferenceList');
                        rejectedConferenceListContainer.innerHTML = ''; // Clear previous content

                        rejectedConferenceList.forEach((conference) => {
                            const rejectedElement =
                                document.createElement('div');
                            // 행사를 직접적으로 보이게 하는 부분
                            rejectedElement.innerHTML = `
                                <p>행사 이름: ${conference.con_title}</p>
                            `;
                            // conference.{DB변수명}으로 접근할 수 있습니다. 등록 신청한 행사가 예쁘게 보여졌으면 좋을 것같아요!
                            rejectedConferenceListContainer.appendChild(
                                rejectedElement
                            );
                        });
                    } else {
                        const rejectedConferenceListContainer =
                            document.getElementById('rejectedConferenceList');
                        rejectedConferenceListContainer.innerHTML =
                            '거절한 행사가 없습니다.';
                    }
                }
            });
        }
                function getConferenceHandler() {
                axios({
                    method: 'GET',
                    url: '/manager/conferenceHandler',
                }).then((res) => {
                    if (res.status === 200) {
                        window.location.href = '/manager/conferenceHandler';
                    }
                })
        };


    </script>
</html>
